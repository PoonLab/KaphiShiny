shiny::runApp()
require(Kaphi)
tr <- "((A:1,B:1):1,C:1));"
tree <- read.tree(text=tr)
tree
plot(tree)
write.tree(tree)
.to.newick(tree)
require(Kaphi)
tr <- "((A:1,B:1):1,C:1));"
tree <- read.tree(text=tr)
tree
plot(tree)
write.tree(tree)
.to.newick(tree)
require(Kaphi)
tr <- "((A:1,B:1):1,C:1));"
tree <- read.tree(text=tr)
tree
.to.newick(tree)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(Kaphi)
library(phylocanvas)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shinyServer(function(input, output,session) {
output$tabs=renderUI({
Tabs<-as.list(rep(0,input$subClust+1))
for (i in 0:length(Tabs)){
Tabs[i]=lapply(paste("Layer",i,sep=" "),tabPanel,value=i)
}
#Tabs <- lapply(paste("Layer",0:input$subClust,sep=" "), tabPanel)
do.call(tabsetPanel,c(Tabs,id="level"))
})
}
)
runApp()
runApp()
parameters <- list(
"Constant Coalescent" = list(
"Ne.tau"
),
"SIRD" = list(
"beta",
"gamma",
"mu"
),
"SIRND" = list(
"beta",
"gamma"
),
"SEIR" = list(
"beta",
"gamma",
"mu",
"alpha"
),
"SIS" = list(
"beta",
"gamma",
"mu"
),
"Yule" = list(
"lambda"
),
"Birth-Death" = list(
"lambda",
"mu"
),
"BiSSE" = list(
"lambda0",
"lambda1",
"mu0",
"mu1",
"q01",
"q10"
),
"MuSSE" = list(
"lambda1",
"lambda2",
"lambda3",
"mu1",
"mu2",
"mu3",
"q12",
"q13",
"q21",
"q23",
"q31",
"q32"
),
"QuaSSE" = list(
"lambda",
"mu",
"char"
),
"GeoSSE" = list(
"sA",
"sB",
"sAB",
"xA",
"xB",
"dA",
"dB"
),
"BiSS-ness" = list(
"lambda0",
"lambda1",
"mu0",
"mu1",
"q01",
"q10",
"p0c",
"p0a",
"p1c",
"p1a"
),
"ClaSSE" = list(
"lambda111",
"lambda112",
"lambda122",
"lambda211",
"lambda212",
"lambda222",
"mu1",
"mu2",
"q12",
"q21"
)
)
for (i in parameters$SIRD)
print(i)
seq_len(parameters$SIRD)
parameters$SIRD
parameters$SIRD[1]
parameters$SIRD[[1]]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
